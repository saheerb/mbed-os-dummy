# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
env:
  test : 123
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      mbed_os_version:
        description: 'mbed version for which you are build this docker'
        required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  find_tag:
    runs-on: ubuntu-latest
        # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - 
        name: Find the latest release mbed-os version
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ARMmbed/mbed-os
          releases-only: true
        id: mbedos_version
        
      - shell: bash
        run: |
          mkdir -p build_info
          date +"%Y-%m-%dT%H:%S" > build_info/date.txt
          echo ${{ steps.mbedos_version.outputs.tag }} > build_info/mbed_os_version
          
      - name: Upload date for using in sub jobs
        uses: actions/upload-artifact@v2
        with:
          name: build-info
          path: build_info
          
          
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    needs: find_tag
    steps:
      - name: Get date info
        uses: actions/download-artifact@v2
        with:
          name: build-info
          
      - shell: bash
        id: build_info
        run: |
          ls -l
          value=`cat date.txt`
          echo "Date is $value"
          echo "::set-output name=TAG::$value"
          value=`cat mbed_os_version`
          echo "::set-output name=MBED_OS_VERSION::$value"
          echo $env.test
          echo $env.fromjob
          echo "action_state=yellow" >> $GITHUB_ENV
          
      - shell: bash
        run: |
          echo $env.test
          echo $env.fromjob
          echo "${{ env.action_state }}"

  build1:
    runs-on: ubuntu-latest
    needs: find_tag
    steps:
      - name: Get date info
        uses: actions/download-artifact@v2
        with:
          name: build-info
          
      - shell: bash
        id: build_info
        run: |
          echo $env.test
          echo $env.fromjob
          echo "${{ env.action_state }}"
